plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id 'jacoco' // –ü–ª–∞–≥–∏–Ω –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"cursor" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ - –ø–æ—Ç–æ–º—É —á—Ç–æ –¥–∞–∂–µ —Ö–∞–æ—Å –Ω—É–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å! üß™
	testImplementation "org.junit.jupiter:junit-jupiter:5.10.1"
	testImplementation "org.mockito:mockito-core:5.8.0"
	testImplementation "org.mockito:mockito-junit-jupiter:5.8.0"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤ —Å JUnit 5
test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat "full"
		showStandardStreams = true
	}
	// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Java 23 –¥–ª—è Mockito/ByteBuddy
	jvmArgs '-Dnet.bytebuddy.experimental=true'
	
	// JaCoCo –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∏–∑-–∑–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å Java 23
	finalizedBy jacocoTestReport
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ JaCoCo - –∏–∑–º–µ—Ä—è–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ —Ç–µ—Å—Ç–∞–º–∏! üìä
jacoco {
	toolVersion = "0.8.11"
	reportsDirectory = layout.buildDirectory.dir("reports/jacoco")
}
// 
jacocoTestReport {
	dependsOn test // –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
	
	reports {
		xml.required = true  // XML –¥–ª—è CI/CD
		html.required = true // HTML –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
		csv.required = true  // CSV –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
	}
	
	// –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–∞—à–µ–≥–æ –∫–æ–¥–∞ (–∏—Å–∫–ª—é—á–∞–µ–º –º–∏–∫—Å–∏–Ω—ã –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ)
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'**/mixin/**',           // –ò—Å–∫–ª—é—á–∞–µ–º –º–∏–∫—Å–∏–Ω—ã
				'**/CursorDataGenerator**' // –ò—Å–∫–ª—é—á–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
			])
		}))
	}
}
// 
// // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è - —á—Ç–æ–±—ã —Ö–∞–æ—Å –±—ã–ª –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω! üéØ
// jacocoTestCoverageVerification {
//	violationRules {
//		rule {
//			enabled = false // –ü–æ–∫–∞ –≤—ã–∫–ª—é—á–∞–µ–º, –Ω–æ –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å!
//			limit {
//				minimum = 0.3 // –ú–∏–Ω–∏–º—É–º 30% –ø–æ–∫—Ä—ã—Ç–∏—è
//			}
//		}
//	}
// }

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}