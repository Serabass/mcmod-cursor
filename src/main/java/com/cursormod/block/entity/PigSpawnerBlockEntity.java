package com.cursormod.block.entity;

import com.cursormod.Cursor;
import com.cursormod.entity.ExplodingPig;
import com.cursormod.entity.ModEntities;
import net.minecraft.core.BlockPos;
import net.minecraft.nbt.CompoundTag;
import net.minecraft.sounds.SoundEvents;
import net.minecraft.sounds.SoundSource;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.entity.BlockEntity;
import net.minecraft.world.level.block.state.BlockState;

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –°–≤–∏–Ω–æ–º–∞—Ç–æ—Ä-3000 - —Ç–µ–ø–µ—Ä—å —Å —Ç–∞–π–º–µ—Ä–æ–º!
 * –°–ø–∞–≤–Ω–∏—Ç –≤–∑—Ä—ã–≤–Ω—ã—Ö —Å–≤–∏–Ω–µ–π –∫–∞–∂–¥—ã–µ N —Å–µ–∫—É–Ω–¥
 */
public class PigSpawnerBlockEntity extends BlockEntity {
    
    private static final int SPAWN_INTERVAL = 100; // 5 —Å–µ–∫—É–Ω–¥ (100 —Ç–∏–∫–æ–≤)
    private int tickCounter = 0;
    
    public PigSpawnerBlockEntity(BlockPos pos, BlockState state) {
        super(ModBlockEntities.PIG_SPAWNER_BLOCK_ENTITY, pos, state);
    }
    
    /**
     * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —Ç–∏–∫ (20 —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É)
     */
    public static void tick(Level level, BlockPos pos, BlockState state, PigSpawnerBlockEntity blockEntity) {
        if (level.isClientSide) {
            return; // –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        }
        
        blockEntity.tickCounter++;
        
        // –ö–∞–∂–¥—ã–µ SPAWN_INTERVAL —Ç–∏–∫–æ–≤ —Å–ø–∞–≤–Ω–∏–º —Å–≤–∏–Ω–µ–π
        if (blockEntity.tickCounter >= SPAWN_INTERVAL) {
            blockEntity.tickCounter = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫
            blockEntity.spawnPigs(level, pos);
        }
    }
    
    /**
     * –°–ø–∞–≤–Ω —Å–≤–∏–Ω–µ–π - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º!
     */
    private void spawnPigs(Level level, BlockPos pos) {
        int pigCount = 2 + level.random.nextInt(3); // 2-4 —Å–≤–∏–Ω—å–∏
        
        Cursor.LOGGER.info("üê∑üè≠ PigSpawner –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! Spawning " + pigCount + " explosive pigs!");
        
        for (int i = 0; i < pigCount; i++) {
            ExplodingPig pig = new ExplodingPig(ModEntities.EXPLODING_PIG, level);
            
            // –°–ø–∞–≤–Ω–∏–º –≤–æ–∫—Ä—É–≥ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            double offsetX = (level.random.nextDouble() - 0.5) * 3;
            double offsetZ = (level.random.nextDouble() - 0.5) * 3;
            
            pig.moveTo(
                pos.getX() + 0.5 + offsetX, 
                pos.getY() + 1, 
                pos.getZ() + 0.5 + offsetZ,
                level.random.nextFloat() * 360.0F, 
                0.0F
            );
            
            // –î–∞–µ–º –∏–º —Å–ª—É—á–∞–π–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–Ω–æ—Å—Ç–∏
            pig.setDeltaMovement(
                (level.random.nextDouble() - 0.5) * 0.3,
                0.3 + level.random.nextDouble() * 0.2,
                (level.random.nextDouble() - 0.5) * 0.3
            );
            
            level.addFreshEntity(pig);
            
            Cursor.LOGGER.info("üê∑üí£ Spawned explosive pig #" + (i+1) + " at " + pig.position());
        }
        
        // –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        level.playSound(null, pos, SoundEvents.PIGLIN_ANGRY, SoundSource.BLOCKS, 1.0F, 0.8F);
        level.playSound(null, pos, SoundEvents.TNT_PRIMED, SoundSource.BLOCKS, 0.7F, 1.5F);
    }
    
    @Override
    public void load(CompoundTag tag) {
        super.load(tag);
        this.tickCounter = tag.getInt("TickCounter");
    }
    
    @Override
    protected void saveAdditional(CompoundTag tag) {
        super.saveAdditional(tag);
        tag.putInt("TickCounter", this.tickCounter);
    }
}

