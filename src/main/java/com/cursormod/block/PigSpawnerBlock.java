package com.cursormod.block;

import com.cursormod.Cursor;
import com.cursormod.block.entity.ModBlockEntities;
import com.cursormod.block.entity.PigSpawnerBlockEntity;
import com.mojang.serialization.MapCodec;
import net.minecraft.core.BlockPos;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.Explosion;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.BaseEntityBlock;
import net.minecraft.world.level.block.RenderShape;
import net.minecraft.world.level.block.entity.BlockEntity;
import net.minecraft.world.level.block.entity.BlockEntityTicker;
import net.minecraft.world.level.block.entity.BlockEntityType;
import net.minecraft.world.level.block.state.BlockState;
import org.jetbrains.annotations.Nullable;

/**
 * –°–≤–∏–Ω–æ–º–∞—Ç–æ—Ä-3000 - –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —É—Å—Ç–∞–ª –æ—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è
 * –¢–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –ø–æ —Ç–∞–π–º–µ—Ä—É!
 */
public class PigSpawnerBlock extends BaseEntityBlock {
    
    public static final MapCodec<PigSpawnerBlock> CODEC = simpleCodec(PigSpawnerBlock::new);
    
    public PigSpawnerBlock(Properties properties) {
        super(properties);
        Cursor.LOGGER.info("üê∑üè≠ PigSpawnerBlock created! Automatic mass pig production facility!");
    }
    
    @Override
    protected MapCodec<? extends BaseEntityBlock> codec() {
        return CODEC;
    }
    
    @Nullable
    @Override
    public BlockEntity newBlockEntity(BlockPos pos, BlockState state) {
        return new PigSpawnerBlockEntity(pos, state);
    }
    
    @Nullable
    @Override
    public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level level, BlockState state, BlockEntityType<T> type) {
        return level.isClientSide ? null : createTickerHelper(type, ModBlockEntities.PIG_SPAWNER_BLOCK_ENTITY, PigSpawnerBlockEntity::tick);
    }
    
    @Override
    public RenderShape getRenderShape(BlockState state) {
        return RenderShape.MODEL;
    }
    
    /**
     * –°–≤–∏–Ω–æ–º–∞—Ç–æ—Ä-3000 –ù–ï–£–Ø–ó–í–ò–ú –∫ –≤–∑—Ä—ã–≤–∞–º! –û–Ω –∫–∞–∫ Nokia 3310 - –≤–µ—á–Ω—ã–π!
     */
    @Override
    public float getExplosionResistance() {
        return 3600000.0F; // –°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –≤–∑—Ä—ã–≤—É –±–æ–ª—å—à–µ, —á–µ–º —É –∫–æ—Ä–µ–Ω–Ω–æ–π –ø–æ—Ä–æ–¥—ã (bedrock = 3600000.0F)
    }
    
    /**
     * –ë–ª–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–Ω–∏—á—Ç–æ–∂–µ–Ω –≤–∑—Ä—ã–≤–æ–º
     */
    @Override
    public boolean dropFromExplosion(Explosion explosion) {
        return false; // –ù–µ –≤—ã–ø–∞–¥–∞–µ—Ç –ø—Ä–∏ –≤–∑—Ä—ã–≤–µ
    }
    
    /**
     * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏ –±–ª–æ–∫–∞
     */
    @Override
    public void onPlace(BlockState state, Level level, BlockPos pos, BlockState oldState, boolean isMoving) {
        super.onPlace(state, level, pos, oldState, isMoving);
        
        if (!level.isClientSide && !oldState.is(this)) {
            Cursor.LOGGER.info("üê∑üè≠ PigSpawner placed! Ready to spawn chaos! INDESTRUCTIBLE MODE ACTIVATED! üí™");
        }
    }
}

 