package com.cursormod.item;

import com.cursormod.Cursor;
import net.minecraft.world.InteractionHand;
import net.minecraft.world.InteractionResultHolder;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.core.BlockPos;
import net.minecraft.world.phys.BlockHitResult;
import net.minecraft.world.phys.HitResult;
import net.minecraft.world.phys.Vec3;
import net.minecraft.world.level.ClipContext;
import net.minecraft.sounds.SoundEvents;
import net.minecraft.sounds.SoundEvent;
import net.minecraft.core.particles.ParticleTypes;
import net.minecraft.server.level.ServerLevel;
import net.minecraft.world.level.gameevent.GameEvent;

public class LaserGun extends Item {
    
    public LaserGun(Properties properties) {
        super(properties);
        Cursor.LOGGER.info("üî´ LaserGun created! A weapon that burns everything in its path!");
    }
    
    @Override
    public InteractionResultHolder<ItemStack> use(Level level, Player player, InteractionHand hand) {
        ItemStack itemStack = player.getItemInHand(hand);
        
        if (!level.isClientSide()) {
            // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∑–≥–ª—è–¥–∞ –∏–≥—Ä–æ–∫–∞
            Vec3 lookDirection = player.getLookAngle();
            Vec3 startPos = player.getEyePosition();
            
            // –í—ã—Å—Ç—Ä–µ–ª–∏–≤–∞–µ–º –ª–∞–∑–µ—Ä –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ 50 –±–ª–æ–∫–æ–≤
            double maxDistance = 50.0;
            Vec3 endPos = startPos.add(lookDirection.scale(maxDistance));
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –±–ª–æ–∫–∞–º–∏
            BlockHitResult hitResult = level.clip(new ClipContext(
                startPos, endPos, 
                ClipContext.Block.OUTLINE, 
                ClipContext.Fluid.NONE, 
                player
            ));
            
            if (hitResult.getType() == HitResult.Type.BLOCK) {
                BlockPos hitPos = hitResult.getBlockPos();
                BlockState hitBlock = level.getBlockState(hitPos);
                
                Cursor.LOGGER.info("üî´ Laser hit block at {}: {}", hitPos, hitBlock.getBlock());
                
                // –ü–æ–¥–∂–∏–≥–∞–µ–º –±–ª–æ–∫, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
                if (hitBlock.isAir() || hitBlock.getBlock() == Blocks.WATER || hitBlock.getBlock() == Blocks.LAVA) {
                    // –°—Ç–∞–≤–∏–º –æ–≥–æ–Ω—å –Ω–∞ –º–µ—Å—Ç–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è
                    level.setBlock(hitPos, Blocks.FIRE.defaultBlockState(), 3);
                    Cursor.LOGGER.info("üî• Block at {} set on fire!", hitPos);
                } else {
                    // –ï—Å–ª–∏ –±–ª–æ–∫ –Ω–µ–ª—å–∑—è –ø–æ–¥–∂–µ—á—å, –ø–æ–¥–∂–∏–≥–∞–µ–º –±–ª–æ–∫ —Ä—è–¥–æ–º
                    BlockPos firePos = hitPos.relative(hitResult.getDirection());
                    if (level.getBlockState(firePos).isAir()) {
                        level.setBlock(firePos, Blocks.FIRE.defaultBlockState(), 3);
                        Cursor.LOGGER.info("üî• Block next to {} set on fire!", hitPos);
                    }
                }
                
                // –°–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã –ª–∞–∑–µ—Ä–∞
                createLaserParticles(level, startPos, hitResult.getLocation());
                
                // –ò–≥—Ä–∞–µ–º –∑–≤—É–∫ –≤—ã—Å—Ç—Ä–µ–ª–∞
                player.playSound(SoundEvents.BLAZE_SHOOT, 1.0F, 1.0F);
                
                // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
                level.gameEvent(player, GameEvent.PROJECTILE_SHOOT, hitPos);
                
            } else {
                // –õ–∞–∑–µ—Ä –Ω–µ –ø–æ–ø–∞–ª –Ω–∏ –≤–æ —á—Ç–æ, –Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ —Å–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã
                createLaserParticles(level, startPos, endPos);
                player.playSound(SoundEvents.BLAZE_SHOOT, 1.0F, 1.0F);
                Cursor.LOGGER.info("üî´ Laser shot into the void!");
            }
            
            // –£–º–µ–Ω—å—à–∞–µ–º –ø—Ä–æ—á–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∞
            if (!player.getAbilities().instabuild) {
                itemStack.hurtAndBreak(1, player, (p) -> {
                    p.broadcastBreakEvent(hand);
                });
            }
        }
        
        return InteractionResultHolder.sidedSuccess(itemStack, level.isClientSide());
    }
    
    private void createLaserParticles(Level level, Vec3 startPos, Vec3 endPos) {
        if (level instanceof ServerLevel serverLevel) {
            // –°–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã –ª–∞–∑–µ—Ä–∞ –ø–æ –≤—Å–µ–π —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏
            Vec3 direction = endPos.subtract(startPos).normalize();
            double distance = startPos.distanceTo(endPos);
            int particleCount = (int) (distance * 2); // 2 —á–∞—Å—Ç–∏—Ü—ã –Ω–∞ –±–ª–æ–∫
            
            for (int i = 0; i < particleCount; i++) {
                double progress = (double) i / particleCount;
                Vec3 particlePos = startPos.add(direction.scale(progress * distance));
                
                // –ö—Ä–∞—Å–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã –¥–ª—è –ª–∞–∑–µ—Ä–∞
                serverLevel.sendParticles(ParticleTypes.FLAME, 
                    particlePos.x, particlePos.y, particlePos.z, 1, 0.0, 0.0, 0.0, 0.0);
                serverLevel.sendParticles(ParticleTypes.LAVA, 
                    particlePos.x, particlePos.y, particlePos.z, 1, 0.0, 0.0, 0.0, 0.0);
            }
            
            // –°–æ–∑–¥–∞–µ–º –≤–∑—Ä—ã–≤ —á–∞—Å—Ç–∏—Ü –≤ —Ç–æ—á–∫–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è
            serverLevel.sendParticles(ParticleTypes.EXPLOSION, 
                endPos.x, endPos.y, endPos.z, 5, 0.5, 0.5, 0.5, 0.1);
            serverLevel.sendParticles(ParticleTypes.FLAME, 
                endPos.x, endPos.y, endPos.z, 20, 1.0, 1.0, 1.0, 0.2);
        }
    }
    
    @Override
    public int getUseDuration(ItemStack stack) {
        return 20; // –í—Ä–µ–º—è –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏
    }
    
    @Override
    public net.minecraft.world.item.UseAnim getUseAnimation(ItemStack stack) {
        return net.minecraft.world.item.UseAnim.BOW; // –ê–Ω–∏–º–∞—Ü–∏—è –∫–∞–∫ —É –ª—É–∫–∞
    }
}
