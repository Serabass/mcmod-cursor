package com.cursormod.item;

import net.minecraft.SharedConstants;
import net.minecraft.server.Bootstrap;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

/**
 * –¢–µ—Å—Ç—ã –¥–ª—è CarrotCannon - –æ—Ä—É–∂–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ç—Ä–µ–ª—è–µ—Ç –º–æ—Ä–∫–æ–≤–∫–∞–º–∏
 * ü•ïüî´üß™
 * 
 * NOTE: –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ - –º–æ—Ä–∫–æ–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–µ—Ç–∞—é—Ç
 */
@DisplayName("ü•ïüî´ –¢–µ—Å—Ç—ã CarrotCannon")
class CarrotCannonTest {

    @BeforeAll
    static void initMinecraft() {
        SharedConstants.tryDetectVersion();
        Bootstrap.bootStrap();
    }

    @Test
    @DisplayName("ü•ï CarrotCannon –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å")
    void testCarrotCannonClassExists() {
        assertNotNull(CarrotCannon.class, 
            "üì¶ –ö–ª–∞—Å—Å CarrotCannon –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å!");
    }

    @Test
    @DisplayName("üÜî CarrotCannon –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Item")
    void testCarrotCannonIsItem() {
        assertTrue(net.minecraft.world.item.Item.class.isAssignableFrom(CarrotCannon.class),
            "üè∑Ô∏è CarrotCannon –¥–æ–ª–∂–µ–Ω –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç Item!");
    }

    @Test
    @DisplayName("üéØ CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ use")
    void testCarrotCannonHasUse() {
        try {
            var method = CarrotCannon.class.getMethod("use", 
                net.minecraft.world.level.Level.class,
                net.minecraft.world.entity.player.Player.class,
                net.minecraft.world.InteractionHand.class);
            assertNotNull(method, "üéØ CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ use!");
        } catch (NoSuchMethodException e) {
            fail("üéØ CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ use!");
        }
    }

    @Test
    @DisplayName("‚è±Ô∏è CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseDuration")
    void testCarrotCannonHasGetUseDuration() {
        try {
            var method = CarrotCannon.class.getMethod("getUseDuration", 
                net.minecraft.world.item.ItemStack.class);
            assertNotNull(method, "‚è±Ô∏è CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseDuration!");
        } catch (NoSuchMethodException e) {
            fail("‚è±Ô∏è CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseDuration!");
        }
    }

    @Test
    @DisplayName("üé≠ CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseAnimation")
    void testCarrotCannonHasGetUseAnimation() {
        try {
            var method = CarrotCannon.class.getMethod("getUseAnimation", 
                net.minecraft.world.item.ItemStack.class);
            assertNotNull(method, "üé≠ CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseAnimation!");
        } catch (NoSuchMethodException e) {
            fail("üé≠ CarrotCannon –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseAnimation!");
        }
    }

    @Test
    @DisplayName("‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã CarrotCannon —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
    void testAllBasicMethodsExist() {
        assertNotNull(CarrotCannon.class, "–ö–ª–∞—Å—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
        assertTrue(net.minecraft.world.item.Item.class.isAssignableFrom(CarrotCannon.class), "–ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç Item");
        
        try {
            CarrotCannon.class.getMethod("use", 
                net.minecraft.world.level.Level.class,
                net.minecraft.world.entity.player.Player.class,
                net.minecraft.world.InteractionHand.class);
            CarrotCannon.class.getMethod("getUseDuration", net.minecraft.world.item.ItemStack.class);
            CarrotCannon.class.getMethod("getUseAnimation", net.minecraft.world.item.ItemStack.class);
        } catch (NoSuchMethodException e) {
            fail("–ù–µ –≤—Å–µ –º–µ—Ç–æ–¥—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç: " + e.getMessage());
        }
    }
}

