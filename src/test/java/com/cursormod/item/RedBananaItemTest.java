package com.cursormod.item;

import net.minecraft.SharedConstants;
import net.minecraft.server.Bootstrap;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

/**
 * –¢–µ—Å—Ç—ã –¥–ª—è RedBananaItem - –∫—Ä–∞—Å–Ω—ã–π –±–∞–Ω–∞–Ω (–ø–æ—Ç–æ–º—É —á—Ç–æ –∂–µ–ª—Ç—ã–µ —Å–ª–∏—à–∫–æ–º —Å–∫—É—á–Ω—ã–µ)
 * üçåüî¥üß™
 * 
 * NOTE: –î–∞, –∫—Ä–∞—Å–Ω—ã–µ –±–∞–Ω–∞–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –ø—Ä–∏—Ä–æ–¥–µ. –ì—É–≥–ª–∏—Ç–µ!
 */
@DisplayName("üçå –¢–µ—Å—Ç—ã RedBananaItem")
class RedBananaItemTest {

    @BeforeAll
    static void initMinecraft() {
        SharedConstants.tryDetectVersion();
        Bootstrap.bootStrap();
    }

    @Test
    @DisplayName("üçå RedBananaItem –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å")
    void testRedBananaItemClassExists() {
        assertNotNull(RedBananaItem.class, 
            "üì¶ –ö–ª–∞—Å—Å RedBananaItem –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å!");
    }

    @Test
    @DisplayName("üÜî RedBananaItem –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Item")
    void testRedBananaItemIsItem() {
        assertTrue(net.minecraft.world.item.Item.class.isAssignableFrom(RedBananaItem.class),
            "üè∑Ô∏è RedBananaItem –¥–æ–ª–∂–µ–Ω –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç Item!");
    }

    @Test
    @DisplayName("üçΩÔ∏è RedBananaItem –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ finishUsingItem")
    void testRedBananaItemHasFinishUsingItem() {
        try {
            var method = RedBananaItem.class.getMethod("finishUsingItem", 
                net.minecraft.world.item.ItemStack.class,
                net.minecraft.world.level.Level.class,
                net.minecraft.world.entity.LivingEntity.class);
            assertNotNull(method, "üçΩÔ∏è RedBananaItem –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ finishUsingItem!");
        } catch (NoSuchMethodException e) {
            fail("üçΩÔ∏è RedBananaItem –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ finishUsingItem!");
        }
    }

    @Test
    @DisplayName("‚è±Ô∏è RedBananaItem –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseDuration")
    void testRedBananaItemHasGetUseDuration() {
        try {
            var method = RedBananaItem.class.getMethod("getUseDuration", 
                net.minecraft.world.item.ItemStack.class);
            assertNotNull(method, "‚è±Ô∏è RedBananaItem –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseDuration!");
        } catch (NoSuchMethodException e) {
            fail("‚è±Ô∏è RedBananaItem –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getUseDuration!");
        }
    }

    @Test
    @DisplayName("‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã RedBananaItem —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
    void testAllBasicMethodsExist() {
        assertNotNull(RedBananaItem.class, "–ö–ª–∞—Å—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
        assertTrue(net.minecraft.world.item.Item.class.isAssignableFrom(RedBananaItem.class), "–ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç Item");
        
        try {
            RedBananaItem.class.getMethod("finishUsingItem", 
                net.minecraft.world.item.ItemStack.class,
                net.minecraft.world.level.Level.class,
                net.minecraft.world.entity.LivingEntity.class);
            RedBananaItem.class.getMethod("getUseDuration", net.minecraft.world.item.ItemStack.class);
        } catch (NoSuchMethodException e) {
            fail("–ù–µ –≤—Å–µ –º–µ—Ç–æ–¥—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç: " + e.getMessage());
        }
    }
}

