package com.cursormod.block;

import net.minecraft.SharedConstants;
import net.minecraft.server.Bootstrap;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

/**
 * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –°–≤–∏–Ω–æ–º–∞—Ç–æ—Ä–∞-3000
 * üê∑üè≠üß™
 * 
 * NOTE: –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Minecraft –±–ª–æ–∫–æ–≤ —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
 */
@DisplayName("üê∑üè≠ –¢–µ—Å—Ç—ã –°–≤–∏–Ω–æ–º–∞—Ç–æ—Ä–∞-3000")
class PigSpawnerBlockTest {

    @BeforeAll
    static void initMinecraft() {
        SharedConstants.tryDetectVersion();
        Bootstrap.bootStrap();
    }

    @Test
    @DisplayName("üê∑ PigSpawnerBlock –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å")
    void testPigSpawnerBlockClassExists() {
        assertNotNull(PigSpawnerBlock.class, 
            "üì¶ –ö–ª–∞—Å—Å PigSpawnerBlock –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å!");
    }

    @Test
    @DisplayName("üî¢ PigSpawnerBlock –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å BaseEntityBlock")
    void testIsBaseEntityBlock() {
        assertTrue(net.minecraft.world.level.block.BaseEntityBlock.class.isAssignableFrom(PigSpawnerBlock.class),
            "üèóÔ∏è PigSpawnerBlock –¥–æ–ª–∂–µ–Ω –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç BaseEntityBlock!");
    }

    @Test
    @DisplayName("üè≠ PigSpawnerBlock –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ newBlockEntity")
    void testHasNewBlockEntity() {
        try {
            var method = PigSpawnerBlock.class.getMethod("newBlockEntity", 
                net.minecraft.core.BlockPos.class, 
                net.minecraft.world.level.block.state.BlockState.class);
            assertNotNull(method, "üè≠ PigSpawnerBlock –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ newBlockEntity!");
        } catch (NoSuchMethodException e) {
            fail("üè≠ PigSpawnerBlock –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ newBlockEntity!");
        }
    }

    @Test
    @DisplayName("üéØ PigSpawnerBlock –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getTicker")
    void testHasGetTicker() {
        try {
            var method = PigSpawnerBlock.class.getMethod("getTicker", 
                net.minecraft.world.level.Level.class,
                net.minecraft.world.level.block.state.BlockState.class,
                net.minecraft.world.level.block.entity.BlockEntityType.class);
            assertNotNull(method, "üéØ PigSpawnerBlock –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getTicker!");
        } catch (NoSuchMethodException e) {
            fail("üéØ PigSpawnerBlock –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ getTicker!");
        }
    }

    @Test
    @DisplayName("‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã PigSpawnerBlock —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
    void testAllBasicMethodsExist() {
        assertNotNull(PigSpawnerBlock.class, "–ö–ª–∞—Å—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
        assertTrue(net.minecraft.world.level.block.BaseEntityBlock.class.isAssignableFrom(PigSpawnerBlock.class), "–ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç BaseEntityBlock");
        
        try {
            PigSpawnerBlock.class.getMethod("newBlockEntity", 
                net.minecraft.core.BlockPos.class, 
                net.minecraft.world.level.block.state.BlockState.class);
            PigSpawnerBlock.class.getMethod("getTicker", 
                net.minecraft.world.level.Level.class,
                net.minecraft.world.level.block.state.BlockState.class,
                net.minecraft.world.level.block.entity.BlockEntityType.class);
        } catch (NoSuchMethodException e) {
            fail("–ù–µ –≤—Å–µ –º–µ—Ç–æ–¥—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç: " + e.getMessage());
        }
    }
}